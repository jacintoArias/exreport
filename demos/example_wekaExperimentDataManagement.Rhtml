<html>

<head>
<title>Machine Learning Weka Data Management</title>
</head>

<body>

<h3>Introduction</h3>

<p>
In this example we make use of the wekaExperiment dataset that is packaged with
exreport. This dataset represents a series of experiment in which several Machine
Learning classifiers are compared by using a set of public datasets (UCI repository)
as benchmark. The performance measures are the classification accuracy and the
training time and have been obtained from a 10-fold cross-validation.
</p>

<p>
The <i>wekaExperiment</i> contains a variable for the method and dataset and two
# variables for the respective outputs. The datasets contains two parameters, 
# the mentioned fold of the cross-validation for each entry and an additional 
# boolean parameter to indicate if feature selection has been performed or not
# in the execution. 
</p>

<!--begin.rcode
library(exreport)
colnames(wekaExperiment)
end.rcode-->


<h3>Initial experimentation</h3>

<p>
In this example we simulate an extension in our experimentation using more
datasets and values for input parameters. In order to do that, we assume that
first we only use 5 datasets, and fold = 0. Also, we do not take into account
the feature selection, so it is not a parameter for us (but its value is "no").
After that, we extend the experimentation using 10 more datasets, ten folds
(from 0 to 9) and two featureSelection  values ("yes" and "no").
</p>

<p>
We use data from the wekaExperiment for the first experimentation and the later
extension. Therefore, the first experimentation is a subset of the data stored
in wekaExperiment.
</p>

<!--begin.rcode fig.width=7, fig.height=6
problems   <- c("anneal", "audiology", "balance-scale", "car", "glass")
firstWekaExperiment <- wekaExperiment[wekaExperiment$problem %in% problems &
                                      wekaExperiment$featureSelection=="no" &
                                      wekaExperiment$fold==0,]

end.rcode-->

<p>
It is common that experiment results are in tabular representation (the methods
in rows, the problems in columns and the value in the i-j position represents
the output of the method i for the problem j). In this case, we will use that
representation and load the experiment for that (using the data in experiment).
As we have two outputs (accuracy and trainingTime) we need two tables.
Note that this is only a didactic example, as we already have the experiment
object that we want in the experiment variable.
</p

<!--begin.rcode fig.width=7, fig.height=6
accuracy <- reshape2::dcast(firstWekaExperiment, method ~ problem,
                            value.var="accuracy")
accuracy
time     <- reshape2::dcast(firstWekaExperiment, method ~ problem,
                            value.var="trainingTime")
time
end.rcode-->


<p>
At this point we have two tabular data, representing the outputs for 4 methods
and 5 datasets, using the fold value 0 (and no feature selection parameter is
used, although we know its value is "no").
Now, we load two experiments and combine them into a single one.
</p>

<!--begin.rcode fig.width=7, fig.height=6
experimentAcc  <- expCreateFromTable(accuracy, "accuracy", "wekaAccuracy", 
                                     parameters = list(fold=0))
experimentTime <- expCreateFromTable(time, "trainingTime", "wekaTrainingTime", 
                                     parameters = list(fold=0))
experiment     <- expCombine(experimentAcc, experimentTime, name = "weka")
summary(experiment)
end.rcode-->


<h3>Extending the experimentation</h3>

<p>
Now, we want to extend the experimentation using 15 datasets, 10 folds (from 0
to 9) and two values for the parameter featureSelection ("yes" and "no").
However, suppose during the experimentation an error occurred, and for the fold 0 and
the dataset "anneal" the results were not obtained. For that, we want to
combine both experiments into a single one, and remove the duplicated instances.
</p>

<!--begin.rcode fig.width=7, fig.height=6
# Due to an error, the instance for problem=="anneal" and fold==0
wekaExperiment2         <- wekaExperiment[wekaExperiment$problem!="anneal" |
                                            wekaExperiment$fold!=0,]
experimentExt           <- expCreate(wekaExperiment2, name="weka extension",
                                     parameters=c("featureSelection","fold"))
end.rcode-->

<p>
Right now, the concatenation of the two experiments will rise an error. This
is because the first experiment has not featureSelection parameter
</p>

<!--begin.rcode fig.width=7, fig.height=6
summary(experiment)
expConcat(experiment, experimentExt) # An error is rised
end.rcode-->

<p>
Even if the experiment does not have the featureSelection parameter, we know its
value is "no" (we just did not take into account that variable before).
Therefore, we need to extend the experiment adding this variable.
</p>

<!--begin.rcode fig.width=7, fig.height=6
experiment <- expExtend(experiment, list(featureSelection="no"))
summary(experiment)
end.rcode-->

<p>
Now we can concat the two experiments. Notice that there will be duplicated
instances (a warning is rised with that information).
You can print the duplicated instances (together with the originals).
Also, as the outputs are the same for those duplicated instances which have
the same configuration (method, problem and input parameters) we can remove them.
</p>

<!--begin.rcode fig.width=7, fig.height=6
# Now we can concat the two experiments (and there are duplicated instances).
experimentExt <- expConcat(experiment, experimentExt) # A warning is rised
# We can print the duplicated instances
head(expGetDuplicated(experimentExt)$data)
# Now we remove them.
experimentExt <- expRemoveDuplicated(experimentExt)
end.rcode-->

</body>
</html>
